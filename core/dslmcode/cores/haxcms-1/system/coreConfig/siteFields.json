{
  "property": "manifest",
  "inputMethod": "tabs",
  "properties": [
    {
      "property": "site",
      "title": "Site",
      "description": "Settings directly related to the internals of the site",
      "properties": [
        {
          "property": "manifest-title",
          "title": "title",
          "description": "Name of the site",
          "inputMethod": "textfield",
          "required": true,
          "icon": "editor:title"
        },
        {
          "property": "manifest-metadata-site-domain",
          "title": "Domain",
          "description": "Domain of this website",
          "inputMethod": "textfield",
          "required": false,
          "icon": "icons:open-in-browser"
        },
        {
          "property": "manifest-description",
          "title": "Description",
          "description": "Simple description of the site",
          "inputMethod": "textfield",
          "required": false,
          "icon": "editor:short-text"
        },
        {
          "property": "manifest-metadata-site-logo",
          "title": "Logo",
          "description": "Logo for thumbnails, browser tabs and used on phones",
          "inputMethod": "haxupload",
          "required": false
        }
      ]
    },
    {
      "property": "theme",
      "title": "Theme",
      "description": "Theme and design settings applied to the entire site",
      "properties": [
        {
          "property": "manifest-metadata-theme-element",
          "title": "Theme",
          "description": "Design and presentation layer for your site",
          "inputMethod": "select",
          "required": false,
          "icon": "editor:format-paint",
          "options": {}
        },
        {
          "property": "manifest-metadata-theme-variables-image",
          "title": "Banner",
          "description": "Banner image aplied to themes that implement one",
          "inputMethod": "haxupload",
          "required": false,
          "icon": "image:image"
        },
        {
          "property": "manifest-metadata-theme-variables-cssVariable",
          "title": "Accent color",
          "description": "Accent color applied to themes that implement it",
          "inputMethod": "colorpicker",
          "required": true,
          "icon": "editor:format-color-fill"
        },
        {
          "property": "manifest-metadata-theme-variables-icon",
          "title": "Icon",
          "description": "Icon to represent the site in themes that implement it",
          "inputMethod": "iconpicker",
          "required": false,
          "icon": "icons:send"
        }
      ]
    },
    {
      "property": "seo",
      "title": "SEO",
      "description": "Search engine and detailed internal path handling",
      "properties": [
        {
          "property": "manifest-metadata-site-settings-pathauto",
          "title": "Pathauto",
          "description": "Automatically maintain and update page paths",
          "inputMethod": "boolean",
          "icon": "icons:link"
        },
        {
          "property": "manifest-metadata-site-settings-publishPagesOn",
          "title": "Hide unpublished pages",
          "description": "Check the box to hide unpublished pages",
          "inputMethod": "boolean",
          "icon": "icons:link"
        },
        {
          "property": "manifest-metadata-site-settings-sw",
          "title": "Add service worker to dynamic page",
          "description": "Whether or not add the service worker to the .php version. Disable this if you need users to see changes instantly.",
          "inputMethod": "boolean",
          "required": false
        },
        {
          "property": "manifest-metadata-site-settings-forceUpgrade",
          "title": "Force browser upgrade",
          "description": "Force users viewing the site to have evergreen browsers (not recommended)",
          "inputMethod": "boolean",
          "icon": "icons:link"
        }
      ]
    },
    {
      "property": "author",
      "title": "Author",
      "description": "Tell us about you and the site you are making",
      "properties": [
        {
          "property": "manifest-license",
          "title": "License",
          "description": "The source url for the element this is citing.",
          "inputMethod": "select",
          "options": {
            "by": "Attribution",
            "by-nc": "Attribution non-commercial",
            "by-nc-nd": "Attribution Non-commercial No derivatives",
            "by-nc-sa": "Attribution non-commercial share a like",
            "by-nd": "Attribution No derivatives",
            "by-sa": "Attribution Share a like"
          },
          "icon": "link"
        },
        {
          "property": "manifest-metadata-author-image",
          "title": "Image",
          "description": "Photo",
          "inputMethod": "haxupload"
        },
        {
          "property": "manifest-metadata-author-name",
          "title": "Name",
          "description": "Name",
          "inputMethod": "textfield"
        },
        {
          "property": "manifest-metadata-author-email",
          "title": "Email",
          "description": "email address",
          "inputMethod": "textfield"
        },
        {
          "property": "manifest-metadata-author-socialLink",
          "title": "Social media link",
          "description": "A primary social space / point of contact",
          "inputMethod": "textfield"
        }
      ]
    },
    {
      "property": "static",
      "title": "Publishing",
      "description": "Publishing options",
      "properties": [
        {
          "property": "manifest-metadata-site-static-cdn",
          "title": "CDN",
          "description": "CDN to use for published assets",
          "inputMethod": "select",
          "required": true,
          "options": {
            "webcomponents.psu.edu": "Penn State CDN",
            "cdn.waxam.io": "Waxam CDN",
            "build": "Local (no CDN)",
            "haxtheweb.org": "HaxTheWeb live demo (developers only)"
          },
          "icon": "link"
        },
        {
          "property": "manifest-metadata-site-static-offline",
          "title": "Offline",
          "description": "Published site will work when completely offline",
          "inputMethod": "boolean",
          "required": false
        },
        {
          "property": "publishacopy",
          "title": "publishacopy",
          "inputMethod": "markup"
        }
      ]
    },
    {
      "property": "git",
      "title": "Version control",
      "description": "Store relational data about fields",
      "properties": [
        {
          "property": "manifest-metadata-site-git-branch",
          "title": "Default branch",
          "description": "Branch to publish on (master is common)",
          "inputMethod": "textfield",
          "required": true
        },
        {
          "property": "manifest-metadata-site-git-staticBranch",
          "title": "Static branch",
          "description": "Branch to publish on (gh-pages is common)",
          "inputMethod": "textfield",
          "required": true
        },
        {
          "property": "manifest-metadata-site-git-url",
          "title": "Git url",
          "description": "location of the git repository to sync up to",
          "inputMethod": "textfield",
          "required": true
        },
        {
          "property": "manifest-metadata-site-git-autoPush",
          "title": "Auto push on save",
          "description": "Push code to the associated remote repo whenever any change is made",
          "inputMethod": "boolean"
        },
        {
          "property": "manifest-metadata-site-git-vendor",
          "title": "Vendor",
          "description": "Vendor used for internal publishing flexibility",
          "inputMethod": "select",
          "options": {
            "github": "Github"
          },
          "required": true
        },
        {
          "property": "manifest-metadata-site-git-publicRepoUrl",
          "title": "Public repo address",
          "description": "URL with path to where the files of this site are publicly accessible. This is useful for having people contribute to the source backing your site. Example: https://github.com/{you}/{repoName}/tree/master/",
          "inputMethod": "textfield",
          "validationType": "url",
          "required": true
        },
        {
          "property": "dangerzone",
          "title": "dangerzone",
          "inputMethod": "markup"
        }
      ]
    },
    {
      "property": "fields",
      "title": "Fields",
      "description": "Custom fields for nodes in the site",
      "properties": [
        {
          "property": "manifest-metadata-node-fields",
          "title": "Custom Fields",
          "description": "Store relational data about nodes and other properties",
          "required": false,
          "icon": "icons:group-work",
          "inputMethod": "array",
          "properties": [
            {
              "property": "inputMethod",
              "title": "Input method",
              "description": "How users can enter data for this field",
              "inputMethod": "select",
              "options": {
                "textfield": "Textfield",
                "number": "Number",
                "boolean": "Checkbox",
                "haxupload": "File upload",
                "colorpicker": "Color picker",
                "iconpicker": "Icon picker",
                "code-editor": "Code editor",
                "alt": "Alt text",
                "datepicker": "Date picker",
                "textarea": "Text area",
                "flipboolean": "Checkbox (inverted)",
                "select": "Select list",
                "array": "Array"
              },
              "icon": "link"
            },
            {
              "property": "property",
              "title": "Machine name",
              "description": "Field machine name for storage",
              "inputMethod": "textfield",
              "required": true
            },
            {
              "property": "title",
              "title": "Name",
              "description": "Readable name of the field",
              "inputMethod": "textfield",
              "required": true
            },
            {
              "property": "description",
              "title": "Description",
              "description": "additional details about the field data",
              "inputMethod": "textfield",
              "required": false
            },
            {
              "property": "required",
              "title": "Required",
              "description": "Is this field required",
              "inputMethod": "boolean",
              "required": false
            },
            {
              "property": "icon",
              "title": "Icon",
              "description": "Optional icon to represent this field",
              "inputMethod": "iconpicker",
              "required": false
            }
          ]
        }
      ]
    }
  ]
}