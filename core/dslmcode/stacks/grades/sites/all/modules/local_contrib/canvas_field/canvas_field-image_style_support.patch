diff --git a/canvas_field.admin.inc b/canvas_field.admin.inc
index 21fb9a5..213a1ef 100644
--- a/canvas_field.admin.inc
+++ b/canvas_field.admin.inc
@@ -17,13 +17,24 @@ function canvas_field_widget_settings_form_passthrough($field, $instance) {
   $settings = $widget['settings'];
   $settings = canvas_field_defaults($settings, TRUE);
   $form = array();
-
+  $styles = array('' => t('None'));
+  $image_styles = image_styles();
+  foreach ($image_styles as $key => $style) {
+    $styles[$key] = $style['name'];
+  }
   $form['style'] = array(
     '#tree' => TRUE,
     '#type' => 'fieldset',
     '#title' => t('Style'),
     '#collapsed' => TRUE,
     '#collapsible' => TRUE,
+    'image_style' => array(
+      '#title' => t('Image style'),
+      '#type' => 'select',
+      '#options' => $styles,
+      '#default_value' => $settings['style']['image_style'],
+      '#description' => t('Optional image style to apply when presenting this on the edit form. Useful when dealing with potentially large uploaded canvas elements'),
+    ),
     'width' => array(
       '#prefix' => '<div class="container-inline">',
       '#title' => t('Canvas Size'),
diff --git a/canvas_field.module b/canvas_field.module
index 5af7985..1a5c3d7 100644
--- a/canvas_field.module
+++ b/canvas_field.module
@@ -81,12 +81,9 @@ function canvas_field_pre_render($element) {
     //to work properly  This is the least obnoxious one I could think of.
     $style['background-color'] = 'transparent';
   }
-
   if (!empty($element['#value'])) {
-    $element['#value'] = canvas_field_file_dataurl($element['#value']);
+    $element['#value'] = canvas_field_file_dataurl($element['#value'], $style['image_style']);
   }
-
-
   $element['#field_settings'] = canvas_field_defaults($element['#field_settings']);
   $element['#field_settings']['style'] = $style;
   $element['#attached']['library'][] = array('canvas_field', 'canvas_field');
@@ -346,7 +343,7 @@ function canvas_field_widget_value($element, &$input, $form_state) {
  * @param array $form_state
  */
 function canvas_field_widget_submit(&$form, &$form_state) {
-  $parents = array_slice($form_state['triggering_element']['#parents'], 0, -1); 
+  $parents = array_slice($form_state['triggering_element']['#parents'], 0, -1);
   $edit_element = drupal_array_get_nested_value($form, $parents);
   $button_name = end($form_state['triggering_element']['#parents']);
 
@@ -488,14 +485,28 @@ function canvas_field_mime_type_extension($mime = NULL) {
 
 /**
  * API Helper to convert an  file into a valid base64 data url.
- * Also allows daturl's to pass through.
+ * Also allows daturl's to pass through and supports image styles.
  *
  * @param string $uri
+ * @param  string $style
  * @return string $dataurl or FALSE if invalid.
  */
-function canvas_field_file_dataurl($uri) {
-  if (file_valid_uri($uri) && file_exists($uri)) {
+function canvas_field_file_dataurl($uri, $style = '') {
+  if (file_valid_uri($uri) && file_exists($uri) && empty($style)) {
+    $mime = file_get_mimetype($uri);
+    $data = base64_encode(file_get_contents($uri));
+    return 'data:' . $mime . ';base64,' . $data;
+  }
+  elseif (file_valid_uri($uri) && file_exists($uri) && !empty($style)) {
+    $file_path = file_build_uri($uri);
     $mime = file_get_mimetype($uri);
+    $uri = image_style_path($style, $uri);
+    // check that this derivative has been made
+    if(!file_exists($uri)){
+      // create the styled derivative file
+      $loaded_style = image_style_load($style);
+      image_style_create_derivative($loaded_style, $file_path, $uri);
+    }
     $data = base64_encode(file_get_contents($uri));
     return 'data:' . $mime . ';base64,' . $data;
   }
@@ -519,12 +530,13 @@ function canvas_field_defaults($settings = array(), $form = FALSE) {
     'color' => TRUE,
     //@todo: move icons to CSS.
     'icon_path' => drupal_get_path('module', 'canvas_field') . '/img/',
-    'style' => array()
+    'style' => array(),
   );
   $settings += $defaults;
   $style_defaults = array(
     'height' => 300,
     'width' => 300,
+    'image_style' => '',
   );
   $settings['style'] += $style_defaults;
 
@@ -538,4 +550,4 @@ function canvas_field_defaults($settings = array(), $form = FALSE) {
     }
   }
   return $settings;
-}
\ No newline at end of file
+}
