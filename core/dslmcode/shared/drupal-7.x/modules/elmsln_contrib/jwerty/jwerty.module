<?php
/**
 * @file
 * Wrapper to help include jwerty.js library.
 */

// jwerty global variables
define('JWERTY_URL', 'http://keithamus.github.io/jwerty/');

/**
 * Implements hook_page_build().
 */
function jwerty_page_build(&$page) {
  $lib = jwerty_get_library();
  if ($lib) {
    // add library to all pages if it exists
    drupal_add_js($lib, array('weight' => -100));
    drupal_add_js(drupal_get_path('module', 'jwerty') . '/js/jwerty-drupal.js');
    drupal_add_css(drupal_get_path('module', 'jwerty') . '/css/jwerty-drupal.css');
  }
}

/**
 * Wrapper to get the library so it works with install profiles.
 */
function jwerty_get_library() {
  // account for libraries not being available on install
  if (function_exists('libraries_get_libraries')) {
    $libraries = libraries_get_libraries();
    if (isset($libraries['jwerty'])) {
      return $libraries['jwerty'] . '/jwerty.js';
    }
  }
  else {
    $directory = 'libraries';
    $profile = drupal_get_profile();
    $config = conf_path();
    $lib = 'jwerty/jwerty.js';
    // look in install profile
    if (file_exists("profiles/$profile/$directory/$lib")) {
      return "profiles/$profile/$directory/$lib";
    }
    // look in sites all
    // Always search sites/all/*.
    $searchdir[] = 'sites/all/' . $directory ;
    if (file_exists("sites/all/$directory/$lib")) {
      return "sites/all/$directory/$lib";
    }
    // look in a local domain as last resort
    // Also search sites/<domain>/*.
    if (file_exists("$config/$directory/$lib")) {
      return "$config/$directory/$lib";
    }
  }
  return FALSE;
}