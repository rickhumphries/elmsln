<?php

/**
 * Impliments hook_theme_registry_alter.
 *
 * Drupal gets weird with overriding theme functions in modules.
 */
function materialize_actions_theme_registry_alter(&$theme_registry) {
  $theme_registry['status_messages']['function'] = 'materialize_actions_status_messages';
}

/**
 * Impliments function theme_status_messages.
 *
 * Define a new status message for 'notifications' which will then
 * be rendered through a materialize toast.
 */
function materialize_actions_status_messages($variables) {
  $display = $variables['display'];
  $output = '';

  $status_heading = array(
    'status' => t('Status message'),
    'error' => t('Error message'),
    'warning' => t('Warning message'),
    'notification' => t('Notification message'),
  );
  foreach (drupal_get_messages($display) as $type => $messages) {
    if ($type == 'notification') {
      foreach($messages as $message) {
        _materialize_actions_make_toast($message);
      }
    }
    else {
      $output .= "<div class=\"messages $type\">\n";
      if (!empty($status_heading[$type])) {
        $output .= '<h2 class="element-invisible">' . $status_heading[$type] . "</h2>\n";
      }
      if (count($messages) > 1) {
        $output .= " <ul>\n";
        foreach ($messages as $message) {
          $output .= '  <li>' . $message . "</li>\n";
        }
        $output .= " </ul>\n";
      }
      else {
        $output .= reset($messages);
      }
      $output .= "</div>\n";
    }
  }
  return $output;
}

/**
 * Helper function to create a materialize toast notification.
 *
 * From the materialize docs:
 *   Materialize.toast(message, displayLength, className, completeCallback);
 */
function _materialize_actions_make_toast($message, $display_length = 4000, $class_name = NULL, $callback = NULL) {
  if ($message) {
    drupal_add_js(
      'jQuery(document).ready(function () { Materialize.toast("'. htmlspecialchars($message) .'", "'. $display_length .'", "'. $class_name.'", "'. $callback .'") });',
      array(
        'type' => 'inline',
      )
    );
  }
}
