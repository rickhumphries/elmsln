<?php

/**
 * @file
 * ELMSLN Core install.
 */

/**
 * Implements hook_install().
 */
function elmsln_core_install() {
  // ensure a11y domain is set
  $cfg = _elmsln_core_get_cfg();
  variable_set('a11y_domain', '.' . $cfg['address']);
  // httprl defaults
  variable_set('httprl_server_addr', '-1');
  variable_set('httprl_background_callback', '1');
  // Make sure that the elmsln_core module runs later then CORS for example.
  db_update('system')
  ->fields(array(
    'weight' => 1,
  ))
  ->condition('name', 'elmsln_core')
  ->condition('type', 'module')
  ->execute();
  variable_set('preprocess_css', '1');
  variable_set('preprocess_js', '1');
}

/**
 * Enable entity iframe suite which we automatically generate
 * the secure tokens to use now based on a hash.
 */
function elmsln_core_update_7000(&$sandbox) {
  module_enable(array('entity_iframe_mode', 'entity_iframe_provider', 'entity_iframe_consumer'));
}

/**
 * Enable a11y.
 */
function elmsln_core_update_7001(&$sandbox) {
  module_enable(array('a11y'));
  // set domain
  $cfg = _elmsln_core_get_cfg();
  variable_set('a11y_domain', '.' . $cfg['address']);
}

/**
 * Update an internal UUID / machine_name property so that address
 * could change without it bricking our connotations of course networks.
 * This also paves the way for machine_names to change though it will
 * be highly discouraged regardless.
 */
function elmsln_core_update_7002(&$sandbox) {
  // only do this for services, authorities don't have this issue
  if (_cis_connector_system_type() == 'service') {
    $query = array(
      'status' => 1,
      'field_machine_name' => _cis_connector_course_context(),
      'type' => 'course',
    );
    // do a look up for this course
    $response = _cis_connection_query($query, 'node');
    if (isset($response['list'][0])) {
      $course = $response['list'][0];
      variable_set('cis_course_machine_name', $course['field_machine_name']);
      variable_set('cis_course_uuid', $course['uuid']);
    }
  }
}

/**
 * VOICE COMMAND SUPPORT IN CORE!!!
 */
function elmsln_core_update_7003(&$sandbox) {
  module_enable(array('elmsln_voice'));
}

/**
 * Keyboard command support in core!
 */
function elmsln_core_update_7004(&$sandbox) {
  module_enable(array('jwerty'));
}

/**
 * Switch from provider / consumer to the resize methodology.
 * It's much faster and much easier to manage / extend.
 */
function elmsln_core_update_7005(&$sandbox) {
  module_disable(array('entity_iframe_provider', 'entity_iframe_consumer'));
  module_enable(array('entity_iframe_resize'));
}

/**
 * Revert to get our IMCE profiles in place.
 */
function elmsln_core_update_7006(&$sandbox) {
  features_revert_module('elmsln_core');
}

/**
 * Enable our Chosen settings.
 */
function elmsln_core_update_7007(&$sandbox) {
  features_revert_module('elmsln_core');
}

/**
 * Set admin path for IMCE so it triggers admin theme.
 */
function elmsln_core_update_7008(&$sandbox) {
  features_revert_module('elmsln_core');
}

/**
 * Enable pathcache module to improve query speed
 */
function elmsln_core_update_7009(&$sandbox) {
  module_enable(array('pathcache'));
}

/**
 * User profile permission for all users now and fixed
 * weird issue with masquerade where staff couldn't
 * masquerade as people who didn't have overlapping
 * roles due to the way we had defined "admin" accounts.
 */
function elmsln_core_update_7010(&$sandbox) {
  features_revert_module('elmsln_core');
}

/**
 * Enable pathcache module to improve query speed
 */
function elmsln_core_update_7011(&$sandbox) {
  module_enable(array('pathcache'));
}

/**
 * LRS permissions now set for user roles as well new
 * form as json.
 */
function elmsln_core_update_7012(&$sandbox) {
  features_revert_module('elmsln_core');
}

/**
 * Use our LRS request function which supports non-blocking sets.
 */
function elmsln_core_update_7013(&$sandbox) {
  variable_set('tincanapi_function', 'elmsln_core_tincanapi_send');
}

/**
 * Fix ckeditor link blank
 */
function elmsln_core_update_7014(&$sandbox) {
  features_revert_module('textbook_editor');
}

/**
 * Enable views_content_cache everywhere.
 */
function elmsln_core_update_7015(&$sandbox) {
  module_enable(array('views_content_cache'));
}

/**
 * APDQC. This is a biggy for performance
 */
function elmsln_core_update_7016(&$sandbox) {
  module_enable(array('apdqc'));
}

/**
 * file temp path set. This SHOULD be set but good to make sure.
 */
function elmsln_core_update_7017(&$sandbox) {
  variable_set('file_temporary_path', '/var/www/elmsln/config/tmp');
}

/**
 * Ensure this module's hooks run later then other things like CORS.
 */
function elmsln_core_update_7018(&$sandbox) {
  // Make sure that the elmsln_core module runs later then CORS for example.
  db_update('system')
  ->fields(array(
    'weight' => 1,
  ))
  ->condition('name', 'elmsln_core')
  ->condition('type', 'module')
  ->execute();
}

/**
 * Disable css / js aggregation.
 */
function elmsln_core_update_7019(&$sandbox) {
  // it'll be faster long term NOT to aggregate, confusing, I know.
  variable_set('preprocess_css', '0');
  variable_set('preprocess_js', '0');
}

/**
 * Implements hook_update_N().
 * Make sure service account users are all UPPERCASE, by force
 */
function elmsln_core_update_7020(&$sandbox) {
  $distro = elmsln_core_get_profile_key();
  $registry = _cis_connector_build_registry($distro);
  // ensure that user and pass are set
  if (isset($registry['user'])) {
    // make sure this account exist to avoid an error
    if ($account = user_load_by_name($registry['user'])) {
      $tmp = $account->name;
      $account->name = strtoupper($account->name);
      $account->mail = str_replace($tmp, $account->name, $account->mail);
      user_save($account);
    }
  }
}

/**
 * Standardized image styles in core.
 */
function elmsln_core_update_7021(&$sandbox) {
  module_enable(array('imagecache_actions', 'imagecache_coloractions', 'imagecache_autorotate'));
  features_revert_module('elmsln_core');
}

/**
 * In context editor permission added to staff / faculty
 */
function elmsln_core_update_7022(&$sandbox) {
  features_revert_module('elmsln_core');
}

/**
 * Viva la Web Component revolution! Let's only enable the core technology and polymer
 * for now and we'll do more testing on all the different display mode capabilities and
 * the process in general.
 */
function elmsln_core_update_7023(&$sandbox) {
  module_enable(array('webcomponents'));
}

/**
 * These still hang around for some reason
 */
function elmsln_core_update_7024(&$sandbox) {
  module_disable(array('entity_iframe_provider', 'entity_iframe_consumer'));
}

/**
 * Delete {system} records for long-lost modules.
 */
function elmsln_core_update_7025(&$sandbox) {
  $modules = array(
    'cis_service_connection_ux',
    'cis_performance_overrides',
  );
  db_delete('system')
    ->condition('name', $modules, 'IN')
    ->condition('type', 'module')
    ->execute();
}

/**
 * Stop using HTTPRL for core calls, this is hard to debug.
 */
function elmsln_core_update_7026(&$sandbox) {
  // stop using httprl for the request function
  variable_del('drupal_http_request_function');
}

/**
 * Delete {system} records for dropped modules.
 */
function elmsln_core_update_7027(&$sandbox) {
  $modules = array(
    'back_to_top',
    'fastclick',
    'tipsy',
    'joyride',
    'jammer',
    'lightbox2',
  );
  db_delete('system')
    ->condition('name', $modules, 'IN')
    ->condition('type', 'module')
    ->execute();
  // drop the jammer variables
  db_delete('variable')
    ->condition('name', 'jammer_%', 'LIKE')
    ->execute();
  // remove tipsy variable
  variable_del('tipsy');
}

/**
 * OMG drop authcache. It's like it never even happened...
 */
function elmsln_core_update_7028(&$sandbox) {
  $modules = array(
    'authcache',
    'authcache_p13n',
    'authcache_ajax',
    'authcache_block',
    'authcache_builtin',
    'authcache_user',
    'authcache_field',
    'authcache_menu',
    'authcache_usercookie',
    'authcache_views',
    'elmsln_authcache',
  );
  db_delete('system')
    ->condition('name', $modules, 'IN')
    ->condition('type', 'module')
    ->execute();
  // drop the authcache variables
  db_delete('variable')
    ->condition('name', 'authcache_%', 'LIKE')
    ->execute();
}

/**
 * Kill views internal cache and drop dead tables, don't try this at home kids.
 */
function elmsln_core_update_7029(&$sandbox) {
  views_invalidate_cache();
  db_drop_table('cache_authcache_key');
  db_drop_table('cache_authcache_p13n');
  db_drop_table('authcache_p13n_key_value');
}

/**
 * Uninstall some old global modules
 */
function elmsln_core_update_7030(&$sandbox) {
  drupal_uninstall_modules(array('entity_iframe_consumer', 'entity_iframe_provider'));
}

/**
 * Disable Chosen so we can use a webcomponent to solve this in the future.
 */
function elmsln_core_update_7031(&$sandbox) {
  features_revert_module('elmsln_core');
  $modules = array(
    'chosen',
  );
  db_delete('system')
    ->condition('name', $modules, 'IN')
    ->condition('type', 'module')
    ->execute();
  // drop the chosen variables
  db_delete('variable')
    ->condition('name', 'chosen_%', 'LIKE')
    ->execute();
}

/**
 * Enable JSON Schema Forms
 */
function elmsln_core_update_7032(&$sandbox) {
  module_enable(array('json_schema_forms'));
}

/**
 * Enable File entity
 */
function elmsln_core_update_7033(&$sandbox) {
  module_enable(array('file_entity'));
  features_revert_module('elmsln_core');
}

/**
 * Remove webcomponents polymer name as that no longer exists
 */
function elmsln_core_update_7034(&$sandbox) {
  $modules = array(
    'webcomponents_polymer',
  );
  db_delete('system')
    ->condition('name', $modules, 'IN')
    ->condition('type', 'module')
    ->execute();
}

/**
 * Disable voice and speed reader stuff
 */
function elmsln_core_update_7035(&$sandbox) {
  module_disable(array("elmsln_voice", "voicecommander", "jwerty"));
  features_revert_module('elmsln_core');
}