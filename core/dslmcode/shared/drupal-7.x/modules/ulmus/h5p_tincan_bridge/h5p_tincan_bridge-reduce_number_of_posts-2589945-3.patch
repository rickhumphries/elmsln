diff --git a/h5p_tincan_bridge.js b/h5p_tincan_bridge.js
index 9f48e94..f1abff1 100644
--- a/h5p_tincan_bridge.js
+++ b/h5p_tincan_bridge.js
@@ -3,19 +3,59 @@
  * Send h5p statements to statement relay
  */
 (function ($) {
-    Drupal.behaviors.h5pTincanBridge = {
-        attach: function (context, settings) {
-            if(window.H5P)
-            {
-                var moduleSettings = settings.h5pTincanBridge;
-                H5P.externalDispatcher.on('xAPI', function (event) {
-                    var data = {
-                        token: moduleSettings.token,
-                        statement: JSON.stringify(event.data.statement)
-                    };
-                    $.post(moduleSettings.relayUrl, data);
-                });
+  var xapi_events = new Array();
+  Drupal.behaviors.h5pTincanBridge = {
+    attach: function (context, settings) {
+      if (window.H5P) {
+        var moduleSettings = settings.h5pTincanBridge;
+        H5P.externalDispatcher.on('xAPI', function (event) {
+            // support reduction in redundant statements being created
+            // this helps with subContentId's such as paged interactions
+            // which have multiple content types per "page" from spitting
+            // out an overwhelming number of xAPI statements. For example,
+            // every key someone presses in an input field or every checkbox
+            // selected for a single question in a long quiz
+            if (moduleSettings.reduceStatements == true) {
+              // capture and wait on triggering subContent interactions to prevent flooding
+              if (event.data.statement.verb.id == 'http://adlnet.gov/expapi/verbs/interacted' && event.data.statement.object.definition.extensions.hasOwnProperty("http://h5p.org/x-api/h5p-subContentId") == true) {
+                xapi_events.push(event);
+              }
+              else {
+                // see if we've been delaying any sub-statements from sending
+                if (xapi_events.length > 0) {
+                  // only send the last one
+                  var subevent = xapi_events.pop();
+                  var delayeddata = {
+                    token: moduleSettings.token,
+                    statement: JSON.stringify(subevent.data.statement),
+                    nid: moduleSettings.nid,
+                    settings: moduleSettings
+                  };
+                  $.post(moduleSettings.relayUrl, delayeddata);
+                  xapi_events = new Array();
+                }
+                // build the data
+                var data = {
+                  token: moduleSettings.token,
+                  statement: JSON.stringify(event.data.statement),
+                  nid: moduleSettings.nid,
+                  settings: moduleSettings
+                };
+                $.post(moduleSettings.relayUrl, data);
+              }
             }
-        }
-    };
+            else {
+              // build the data
+              var data = {
+                token: moduleSettings.token,
+                statement: JSON.stringify(event.data.statement),
+                nid: moduleSettings.nid,
+                settings: moduleSettings
+              };
+              $.post(moduleSettings.relayUrl, data);
+            }
+        });
+      }
+    }
+  };
 }(jQuery));
\ No newline at end of file
diff --git a/h5p_tincan_bridge.module b/h5p_tincan_bridge.module
index 287a9b7..d6cdfcf 100644
--- a/h5p_tincan_bridge.module
+++ b/h5p_tincan_bridge.module
@@ -6,12 +6,13 @@
  */
 
 define('H5P_TINCAN_BRIDGE__RELAY_URL', 'ajax/tincanapi/relay');
+define('H5P_TINCAN_BRIDGE__REDUCE_STATEMENTS', TRUE);
 
 /**
  * Implements hook_init().
  */
 function h5p_tincan_bridge_init() {
-  drupal_add_js(array('h5pTincanBridge' => array('token' => drupal_get_token(), 'relayUrl' => base_path() . H5P_TINCAN_BRIDGE__RELAY_URL)), 'setting');
+  drupal_add_js(array('h5pTincanBridge' => array('title' => drupal_get_title(), 'nid' => arg(1), 'token' => drupal_get_token(), 'reduceStatements' => H5P_TINCAN_BRIDGE__REDUCE_STATEMENTS, 'relayUrl' => base_path() . H5P_TINCAN_BRIDGE__RELAY_URL)), 'setting');
   drupal_add_js(drupal_get_path('module', 'h5p_tincan_bridge') . '/h5p_tincan_bridge.js');
 }
 
