#!/bin/bash
# drush-command-job assumes the structure of this file to be drush commands.
# This means each line will be something like:
# drush @network.sing100 en views
# It will then automatically append --y to the end and move onto the next command
# This is similar to the end of the drush-create-site routine where it can keep
# calling drush commands but has less commands that its allowed to execute for
# security.
#
#where am i? move to where I am. This ensures source is properly sourced
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd $DIR

#use the same settings as the create site
source ../../config/scripts/drush-create-site/config.cfg
commandloc=$fileloc/drush-command-job

#test for empty vars. if empty required var -- exit
if [ -z $fileloc ]; then
  echo "please update your config.cfg file"
  exit 1
fi
if [ -z $webdir ]; then
  echo "please update your config.cfg file"
  exit 1
fi

date=`date +%Y-%m-%d_%H:%M:%S`

#prevent the script from being run more than once
if [ -f /tmp/drush-command-lock ]; then
  exit 1
fi
touch /tmp/drush-command-lock

#read the files in the $commandloc and set vars based on file name.
for jobfile in `find $commandloc -maxdepth 1 ! -name *.swp ! -name '*processing*' ! -name '*error' ! -name '*processed' ! -name '*example' ! -name '*.md' -type f`
do
  #start processing
  /bin/mv $jobfile $jobfile.processing
  #this will be made up of drush calls
  grep ^drush $jobfile.processing | while read drush; do
    drushcommand=`echo $drush | awk '{print $3}'`
    background='TRUE'
    case $drushcommand in
    cron)
    drushcommand=`echo "$drush" | cut -f 2- -d ' '`
    ;;
    cc)
    drushcommand=`echo "$drush" | cut -f 2- -d ' '`
    ;;
    ucrt)
    drushcommand=`echo "$drush" | cut -f 2- -d ' '`
    background='FALSE'
    ;;
    urol)
    drushcommand=`echo "$drush" | cut -f 2- -d ' '`
    background='FALSE'
    ;;
    ucan)
    drushcommand=`echo "$drush" | cut -f 2- -d ' '`
    background='FALSE'
    ;;
    urrol)
    drushcommand=`echo "$drush" | cut -f 2- -d ' '`
    background='FALSE'
    ;;
    ugrid)
    drushcommand=`echo "$drush" | cut -f 2- -d ' '`
    background='FALSE'
    ;;
    urrid)
    drushcommand=`echo "$drush" | cut -f 2- -d ' '`
    background='FALSE'
    ;;
    cook)
    drushcommand=`echo "$drush" | cut -f 2- -d ' '`
    background='FALSE'
    ;;
    ddt)
    drushcommand=`echo "$drush" | cut -f 2- -d ' '`
    background='FALSE'
    ;;
    elmsln-trigger-innovate)
    drushcommand=`echo "$drush" | cut -f 2- -d ' '`
    background='FALSE'
    ;;
    *)
    badcommand=`echo "$drush" | cut -f 2- -d ' '`
    drushcommand="NULL"
    ;;
    esac
    if [[ $drushcommand = "NULL" ]]; then
      echo "$badcommand is not a supported drush command."
      rm /tmp/drush-lock
      exit 1
    fi
    # do most commands in a background thread
    if [[ $background = 'TRUE' ]]; then
        (drush $drushcommand --y < /dev/null &) >> $configsdir/logs/drush-command-job.log
      else
        drush $drushcommand --y >> $configsdir/logs/drush-command-job.log
    fi
  done
  # move this to processed state after its finished
  if [[ -f $jobfile.processing ]]; then
    mv $jobfile.processing $jobfile.processed
  fi
done
rm /tmp/drush-command-lock
